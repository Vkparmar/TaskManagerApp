// üì¶ ‡§™‡§π‡§≤‡•á ‡§∏‡•á localStorage ‡§Æ‡•á‡§Ç ‡§ú‡•ã "tasks" save ‡§π‡•à‡§Ç ‡§â‡§®‡•ç‡§π‡•á‡§Ç ‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç, ‡§µ‡§∞‡§®‡§æ ‡§ñ‡§æ‡§≤‡•Ä array ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç
let tasks = JSON.parse(localStorage.getItem("tasks")) || [];

// üîÑ ‡§ú‡§¨ ‡§™‡•á‡§ú ‡§≤‡•ã‡§° ‡§π‡•ã, ‡§§‡•ã ‡§∏‡§æ‡§∞‡•á tasks ‡§ï‡•ã display ‡§ï‡§∞‡•á‡§Ç
showTasks(tasks);

// üîò ‡§ú‡§¨ "Add Task" ‡§¨‡§ü‡§® ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§π‡•ã, ‡§§‡•ã ‡§è‡§ï ‡§®‡§Ø‡§æ task ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
document.getElementById("addTaskBtn").addEventListener("click", function () {
  // ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§á‡§®‡§™‡•Å‡§ü ‡§∏‡•á task ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§≤‡•á‡§Ç
  let taskInput = document.getElementById("taskInput");
  let taskName = taskInput.value.trim(); // ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§î‡§∞ ‡§Ö‡§Ç‡§§ ‡§ï‡•á ‡§ñ‡§æ‡§≤‡•Ä spaces ‡§π‡§ü‡§æ‡§è‡§Ç

  if (taskName) {
    // task object ‡§¨‡§®‡§æ‡§è‡§Ç (name + done = false)
    tasks.push({ name: taskName, done: false });

    // input field ‡§ï‡•ã ‡§ñ‡§æ‡§≤‡•Ä ‡§ï‡§∞ ‡§¶‡•á‡§Ç
    taskInput.value = "";

    // localStorage ‡§Æ‡•á‡§Ç ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç
    saveTasks();

    // UI ‡§Æ‡•á‡§Ç updated list ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
    showTasks(tasks);
  }
});

// üíæ ‡§∏‡§≠‡•Ä tasks ‡§ï‡•ã localStorage ‡§Æ‡•á‡§Ç string ‡§ï‡•Ä ‡§§‡§∞‡§π ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç
function saveTasks() {
  localStorage.setItem("tasks", JSON.stringify(tasks)); // array ‡§ï‡•ã JSON string ‡§Æ‡•á‡§Ç ‡§¨‡§¶‡§≤‡§ï‡§∞ ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç
}

// üßæ UI ‡§Æ‡•á‡§Ç tasks ‡§ï‡•ã ‡§¶‡§ø‡§ñ‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡§æ function
function showTasks(filteredTasks = tasks) {
  let taskList = document.getElementById("taskList"); // UL element ‡§ï‡•ã ‡§™‡§ï‡§°‡§º‡•á‡§Ç
  taskList.innerHTML = ""; // ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§Æ‡•å‡§ú‡•Ç‡§¶ tasks ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç

  // ‡§Ö‡§ó‡§∞ ‡§ï‡•ã‡§à task ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à ‡§§‡•ã message ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
  if (filteredTasks.length === 0) {
    taskList.innerHTML = "<li>No Task Found</li>";
    return;
  }

  // ‡§π‡§∞ task ‡§ï‡•ã ‡§è‡§ï list item (li) ‡§ï‡•á ‡§∞‡•Ç‡§™ ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
  filteredTasks.forEach((task, index) => {
    let li = document.createElement("li"); // ‡§®‡§Ø‡§æ <li> ‡§¨‡§®‡§æ‡§è‡§Ç

    // ‚úÖ Checkbox ‡§ú‡•ã task ‡§ï‡•ã complete/ incomplete ‡§¶‡§ø‡§ñ‡§æ‡§è
    let checkbox = document.createElement("input");
    checkbox.type = "checkbox"; // input ‡§ï‡§æ type checkbox ‡§∞‡§ñ‡•á‡§Ç
    checkbox.checked = task.done; // ‡§Ö‡§ó‡§∞ task ‡§™‡§π‡§≤‡•á ‡§∏‡•á complete ‡§π‡•à, ‡§§‡•ã tick ‡§ï‡§∞‡•á‡§Ç

    // ‡§ú‡§¨ checkbox ‡§¨‡§¶‡§≤‡§§‡§æ ‡§π‡•à, ‡§§‡•ã task ‡§ï‡§æ status update ‡§ï‡§∞‡•á‡§Ç
    checkbox.onchange = function () {
      task.done = this.checked; // true/false set ‡§ï‡§∞‡•á‡§Ç
      saveTasks();              // localStorage ‡§Æ‡•á‡§Ç ‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç
      showTasks(tasks);         // UI update ‡§ï‡§∞‡•á‡§Ç
    };

    // üñäÔ∏è Task ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§è‡§ï <span> ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
    let span = document.createElement("span");
    span.innerText = task.name; // task ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç

    if (task.done) span.classList.add("completed"); // ‡§Ö‡§ó‡§∞ task ‡§™‡•Ç‡§∞‡§æ ‡§π‡•à ‡§§‡•ã style ‡§¨‡§¶‡§≤‡•á‡§Ç (CSS ‡§Æ‡•á‡§Ç line-through)

    // üñäÔ∏è Edit ‡§¨‡§ü‡§® ‡§¨‡§®‡§æ‡§è‡§Å
    let editBtn = document.createElement("button");
    editBtn.innerText = "‚úèÔ∏è"; // ‡§¨‡§ü‡§® ‡§Æ‡•á‡§Ç ‚úèÔ∏è icon
    editBtn.onclick = function () {
      document.getElementById("taskInput").value = task.name; // task name input ‡§Æ‡•á‡§Ç ‡§≠‡§∞‡•á‡§Ç
      tasks.splice(index, 1); // ‡§™‡•Å‡§∞‡§æ‡§®‡§æ task list ‡§∏‡•á ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç
      saveTasks();            // updated list ‡§ï‡•ã save ‡§ï‡§∞‡•á‡§Ç
      showTasks(tasks);       // UI update ‡§ï‡§∞‡•á‡§Ç
    };

    // ‚ùå Delete ‡§¨‡§ü‡§® ‡§¨‡§®‡§æ‡§è‡§Å
    let deleteBtn = document.createElement("button");
    deleteBtn.innerText = "‚ùå"; // ‡§¨‡§ü‡§® ‡§Æ‡•á‡§Ç ‚ùå icon
    deleteBtn.onclick = function () {
      // Confirm popup ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
      if (confirm("Delete this task?")) {
        tasks.splice(index, 1); // task array ‡§∏‡•á ‡§π‡§ü‡§æ‡§è‡§Ç
        saveTasks();            // updated list save ‡§ï‡§∞‡•á‡§Ç
        showTasks(tasks);       // UI update ‡§ï‡§∞‡•á‡§Ç
      }
    };

    // üß± ‡§∏‡§≠‡•Ä elements ‡§ï‡•ã <li> ‡§Æ‡•á‡§Ç ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    li.appendChild(checkbox);  // checkbox ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    li.appendChild(span);      // task ‡§ï‡§æ ‡§®‡§æ‡§Æ
    li.appendChild(editBtn);   // edit ‡§¨‡§ü‡§®
    li.appendChild(deleteBtn); // delete ‡§¨‡§ü‡§®

    // <ul> ‡§Æ‡•á‡§Ç <li> ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
    taskList.appendChild(li);
  });
}

// üîç Filter dropdown change ‡§™‡§∞ tasks ‡§ï‡•ã filter ‡§ï‡§∞‡•á‡§Ç
document.getElementById("filter").addEventListener("change", function () {
  let filter = this.value; // ‡§ö‡•Å‡§®‡§æ ‡§ó‡§Ø‡§æ option (all, completed, pending)

  // ‡§∏‡§≠‡•Ä tasks ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
  if (filter === "all") {
    showTasks(tasks);
  }
  // ‡§∏‡§ø‡§∞‡•ç‡§´ completed ‡§µ‡§æ‡§≤‡•á tasks ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
  else if (filter === "completed") {
    showTasks(tasks.filter((task) => task.done));
  }
  // ‡§∏‡§ø‡§∞‡•ç‡§´ pending ‡§µ‡§æ‡§≤‡•á tasks ‡§¶‡§ø‡§ñ‡§æ‡§è‡§Ç
  else if (filter === "pending") {
    showTasks(tasks.filter((task) => !task.done));
  }
});

// üóëÔ∏è "Clear Completed" ‡§¨‡§ü‡§®: ‡§∏‡§≠‡•Ä ‡§™‡•Ç‡§∞‡•á ‡§π‡•Å‡§è tasks ‡§ï‡•ã ‡§π‡§ü‡§æ‡§è‡§Ç
document.getElementById("clearCompleted").addEventListener("click", () => {
  tasks = tasks.filter((task) => !task.done); // ‡§ï‡•á‡§µ‡§≤ pending tasks ‡§∞‡§ñ‡•á‡§Ç
  saveTasks();    // localStorage ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç
  showTasks(tasks); // UI update ‡§ï‡§∞‡•á‡§Ç
});

// üßπ "Clear All" ‡§¨‡§ü‡§®: ‡§∏‡§≠‡•Ä tasks ‡§π‡§ü‡§æ‡§è‡§Ç
document.getElementById("clearAll").addEventListener("click", () => {
  // Confirm popup
  if (confirm("Delete all tasks?")) {
    tasks = []; // tasks array ‡§ñ‡§æ‡§≤‡•Ä ‡§ï‡§∞‡•á‡§Ç
    saveTasks();
    showTasks(tasks);
  }
});

// üåô Dark Mode Toggle ‡§¨‡§ü‡§® ‡§™‡§∞ light/dark mode ‡§∏‡•ç‡§µ‡§ø‡§ö ‡§ï‡§∞‡•á‡§Ç
document.getElementById("toggleTheme").addEventListener("click", () => {
  document.body.classList.toggle("dark"); // body ‡§Æ‡•á‡§Ç dark class toggle ‡§ï‡§∞‡•á‡§Ç

  // theme ‡§ï‡•ã localStorage ‡§Æ‡•á‡§Ç save ‡§ï‡§∞‡•á‡§Ç
  let isDark = document.body.classList.contains("dark");
  localStorage.setItem("theme", isDark ? "dark" : "light");
});

// üåó Page reload ‡§π‡•ã‡§®‡•á ‡§™‡§∞ theme restore ‡§ï‡§∞‡•á‡§Ç
window.onload = function () {
  // ‡§Ö‡§ó‡§∞ saved theme dark ‡§π‡•à ‡§§‡•ã dark class ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
  if (localStorage.getItem("theme") === "dark") {
    document.body.classList.add("dark");
  }
};
